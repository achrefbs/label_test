{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../keys.pipe\";\nfunction DocumentViewerComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 2);\n    i0.ɵɵlistener(\"click\", function DocumentViewerComponent_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const label_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLabelSelected(label_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const label_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background-color\", ctx_r0.labelColorMap[label_r1]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(label_r1);\n  }\n}\nexport class DocumentViewerComponent {\n  constructor() {\n    this.documentContent = '';\n    this.labelColorMap = {};\n    this.annotatedDocumentContent = '';\n    this.selectedLabel = '';\n  }\n  ngOnChanges(changes) {\n    if (changes['documentContent']) {\n      this.annotatedDocumentContent = changes['documentContent'].currentValue;\n    }\n  }\n  onDocumentSelected(event) {\n    console.log('event: ' + event.target.selectionStart);\n    const selection = event.target.value.substring(event.target.selectionStart, event.target.selectionEnd);\n    console.log('selection: ' + selection);\n    const annotatedText = `<span style=\"background-color: ${this.labelColorMap[this.selectedLabel]}\">${selection}</span>`;\n    this.annotatedDocumentContent = this.annotatedDocumentContent.replace(selection, annotatedText);\n  }\n  onLabelSelected(label) {\n    this.selectedLabel = label;\n  }\n}\nDocumentViewerComponent.ɵfac = function DocumentViewerComponent_Factory(t) {\n  return new (t || DocumentViewerComponent)();\n};\nDocumentViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DocumentViewerComponent,\n  selectors: [[\"app-document-viewer\"]],\n  inputs: {\n    documentContent: \"documentContent\",\n    labelColorMap: \"labelColorMap\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 4,\n  consts: [[3, \"background-color\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"contenteditable\", \"true\", 3, \"innerHTML\", \"mouseup\"], [3, \"click\"]],\n  template: function DocumentViewerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, DocumentViewerComponent_button_1_Template, 2, 3, \"button\", 0);\n      i0.ɵɵpipe(2, \"keys\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 1);\n      i0.ɵɵlistener(\"mouseup\", function DocumentViewerComponent_Template_div_mouseup_3_listener($event) {\n        return ctx.onDocumentSelected($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx.labelColorMap));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"innerHTML\", ctx.annotatedDocumentContent, i0.ɵɵsanitizeHtml);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.KeysPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IACIA,iCAAoI;IAAjFA;MAAA;MAAA;MAAA;MAAA,OAASA,+CAAsB;IAAA,EAAC;IAAiDA,YAAS;IAAAA,iBAAS;;;;;IAAlEA,kEAA+C;IAACA,eAAS;IAATA,8BAAS;;;ACMjJ,OAAM,MAAOC,uBAAuB;EALpCC;IAMW,oBAAe,GAAW,EAAE;IAC5B,kBAAa,GAA2B,EAAE;IAEnD,6BAAwB,GAAW,EAAE;IAwBrC,kBAAa,GAAW,EAAE;;EAtB1BC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,EAAE;MAC9B,IAAI,CAACC,wBAAwB,GAAGD,OAAO,CAAC,iBAAiB,CAAC,CAACE,YAAY;;EAE3E;EAEAC,kBAAkB,CAACC,KAAU;IAC3BC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAACC,cAAc,CAAC;IACpD,MAAMC,SAAS,GAAGL,KAAK,CAACG,MAAM,CAACG,KAAK,CAACC,SAAS,CAC5CP,KAAK,CAACG,MAAM,CAACC,cAAc,EAC3BJ,KAAK,CAACG,MAAM,CAACK,YAAY,CAC1B;IACDP,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGG,SAAS,CAAC;IACtC,MAAMI,aAAa,GAAG,kCACpB,IAAI,CAACC,aAAa,CAAC,IAAI,CAACC,aAAa,CACvC,KAAKN,SAAS,SAAS;IACvB,IAAI,CAACR,wBAAwB,GAAG,IAAI,CAACA,wBAAwB,CAACe,OAAO,CACnEP,SAAS,EACTI,aAAa,CACd;EACH;EAIAI,eAAe,CAACC,KAAa;IAC3B,IAAI,CAACH,aAAa,GAAGG,KAAK;EAC5B;;AAhCWrB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAsB;EAAAC;IAAAC;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDPpC9B,2BAAK;MACDA,8EAAsJ;;MAC1JA,iBAAM;MAEJA,8BAA0G;MAA9EA;QAAA,OAAW+B,8BAA0B;MAAA,EAAC;MAAwC/B,iBAAM;;;MAHpFA,eAAuB;MAAvBA,iEAAuB;MAGgBA,eAAsC;MAAtCA,2EAAsC","names":["i0","DocumentViewerComponent","constructor","ngOnChanges","changes","annotatedDocumentContent","currentValue","onDocumentSelected","event","console","log","target","selectionStart","selection","value","substring","selectionEnd","annotatedText","labelColorMap","selectedLabel","replace","onLabelSelected","label","selectors","inputs","documentContent","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.html","C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.ts"],"sourcesContent":["<div>\n    <button *ngFor=\"let label of labelColorMap | keys\" (click)=\"onLabelSelected(label)\" [style.background-color]=\"labelColorMap[label]\">{{label}}</button>\n</div>\n  \n  <div contenteditable=\"true\" (mouseup)=\"onDocumentSelected($event)\" [innerHTML]=\"annotatedDocumentContent\"></div>\n  ","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-document-viewer',\n  templateUrl: './document-viewer.component.html',\n  styleUrls: ['./document-viewer.component.css']\n})\nexport class DocumentViewerComponent implements OnChanges {\n  @Input() documentContent: string = '';\n  @Input() labelColorMap: Record<string, string> = {};\n\n  annotatedDocumentContent: string = '';\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['documentContent']) {\n      this.annotatedDocumentContent = changes['documentContent'].currentValue;\n    }\n  }\n\n  onDocumentSelected(event: any) {\n    console.log('event: ' + event.target.selectionStart);\n    const selection = event.target.value.substring(\n      event.target.selectionStart,\n      event.target.selectionEnd\n    );\n    console.log('selection: ' + selection);\n    const annotatedText = `<span style=\"background-color: ${\n      this.labelColorMap[this.selectedLabel]\n    }\">${selection}</span>`;\n    this.annotatedDocumentContent = this.annotatedDocumentContent.replace(\n      selection,\n      annotatedText\n    );\n  }\n\n  selectedLabel: string = '';\n\n  onLabelSelected(label: string) {\n    this.selectedLabel = label;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}