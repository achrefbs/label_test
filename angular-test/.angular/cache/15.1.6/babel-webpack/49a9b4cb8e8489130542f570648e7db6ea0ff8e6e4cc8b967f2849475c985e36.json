{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DocumentViewerComponent {\n  constructor() {\n    this.documentContent = '';\n    this.labelColorMap = {};\n    this.annotatedDocumentContent = '';\n    this.selectedLabel = '';\n  }\n  ngOnChanges(changes) {\n    if (changes['documentContent']) {\n      this.annotatedDocumentContent = changes['documentContent'].currentValue;\n    }\n  }\n  onDocumentSelected(event) {\n    console.log('event: ' + event.target.innerHTML.getSelection());\n    ;\n    const selection = event.target.value.substring(event.target.selectionStart, event.target.selectionEnd);\n    console.log('selection: ' + selection);\n    const annotatedText = `<span style=\"background-color: ${this.labelColorMap[this.selectedLabel]}\">${selection}</span>`;\n    this.annotatedDocumentContent = this.annotatedDocumentContent.replace(selection, annotatedText);\n  }\n  onLabelSelected(label) {\n    this.selectedLabel = label;\n  }\n}\nDocumentViewerComponent.ɵfac = function DocumentViewerComponent_Factory(t) {\n  return new (t || DocumentViewerComponent)();\n};\nDocumentViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DocumentViewerComponent,\n  selectors: [[\"app-document-viewer\"]],\n  inputs: {\n    documentContent: \"documentContent\",\n    labelColorMap: \"labelColorMap\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 1,\n  consts: [[1, \"document-viewer-container\"], [\"contenteditable\", \"False\", 1, \"document-content\", 3, \"innerHTML\", \"mouseup\"]],\n  template: function DocumentViewerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵlistener(\"mouseup\", function DocumentViewerComponent_Template_div_mouseup_1_listener($event) {\n        return ctx.onDocumentSelected($event);\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.annotatedDocumentContent, i0.ɵɵsanitizeHtml);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,uBAAuB;EALpCC;IAMW,oBAAe,GAAW,EAAE;IAC5B,kBAAa,GAA2B,EAAE;IAEnD,6BAAwB,GAAW,EAAE;IAuBrC,kBAAa,GAAW,EAAE;;EArB1BC,WAAW,CAACC,OAAsB;IAChC,IAAIA,OAAO,CAAC,iBAAiB,CAAC,EAAE;MAC9B,IAAI,CAACC,wBAAwB,GAAGD,OAAO,CAAC,iBAAiB,CAAC,CAACE,YAAY;;EAE3E;EACAC,kBAAkB,CAACC,KAAU;IAC3BC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAACC,SAAS,CAACC,YAAY,EAAE;IAAG;IAChE,MAAMC,SAAS,GAAGN,KAAK,CAACG,MAAM,CAACI,KAAK,CAACC,SAAS,CAC5CR,KAAK,CAACG,MAAM,CAACM,cAAc,EAC3BT,KAAK,CAACG,MAAM,CAACO,YAAY,CAC1B;IACDT,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGI,SAAS,CAAC;IACtC,MAAMK,aAAa,GAAG,kCACpB,IAAI,CAACC,aAAa,CAAC,IAAI,CAACC,aAAa,CACvC,KAAKP,SAAS,SAAS;IACvB,IAAI,CAACT,wBAAwB,GAAG,IAAI,CAACA,wBAAwB,CAACiB,OAAO,CACnER,SAAS,EACTK,aAAa,CACd;EACH;EAIAI,eAAe,CAACC,KAAa;IAC3B,IAAI,CAACH,aAAa,GAAGG,KAAK;EAC5B;;AA/BWvB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAwB;EAAAC;IAAAC;IAAAP;EAAA;EAAAQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCPpCC,8BAAuC;MAIjCA;QAAA,OAAWC,8BAA0B;MAAA,EAAC;MAEvCD,iBAAM;;;MADLA,eAAsC;MAAtCA,2EAAsC","names":["DocumentViewerComponent","constructor","ngOnChanges","changes","annotatedDocumentContent","currentValue","onDocumentSelected","event","console","log","target","innerHTML","getSelection","selection","value","substring","selectionStart","selectionEnd","annotatedText","labelColorMap","selectedLabel","replace","onLabelSelected","label","selectors","inputs","documentContent","features","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.ts","C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.html"],"sourcesContent":["import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-document-viewer',\n  templateUrl: './document-viewer.component.html',\n  styleUrls: ['./document-viewer.component.css']\n})\nexport class DocumentViewerComponent implements OnChanges {\n  @Input() documentContent: string = '';\n  @Input() labelColorMap: Record<string, string> = {};\n\n  annotatedDocumentContent: string = '';\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['documentContent']) {\n      this.annotatedDocumentContent = changes['documentContent'].currentValue;\n    }\n  }\n  onDocumentSelected(event: any) {\n    console.log('event: ' + event.target.innerHTML.getSelection(); );\n    const selection = event.target.value.substring(\n      event.target.selectionStart,\n      event.target.selectionEnd\n    );\n    console.log('selection: ' + selection);\n    const annotatedText = `<span style=\"background-color: ${\n      this.labelColorMap[this.selectedLabel]\n    }\">${selection}</span>`;\n    this.annotatedDocumentContent = this.annotatedDocumentContent.replace(\n      selection,\n      annotatedText\n    );\n  }\n\n  selectedLabel: string = '';\n\n  onLabelSelected(label: string) {\n    this.selectedLabel = label;\n  }\n}\n","<div class=\"document-viewer-container\">\n    <div\n      class=\"document-content\"\n      contenteditable=\"False\"\n      (mouseup)=\"onDocumentSelected($event)\"\n      [innerHTML]=\"annotatedDocumentContent\"\n    ></div>\n  </div>\n  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}