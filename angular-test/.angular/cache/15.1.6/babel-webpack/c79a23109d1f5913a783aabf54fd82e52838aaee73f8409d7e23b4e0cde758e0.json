{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LabelListComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function LabelListComponent_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const label_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLabelSelect(label_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const label_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background-color\", label_r1.color)(\"color\", \"white\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(label_r1.label);\n  }\n}\nexport class LabelListComponent {\n  constructor() {\n    this.labelList = [];\n    this.labelListInput = '';\n    this.onLabelSelected = new EventEmitter();\n  }\n  addLabel() {\n    if (this.labelListInput) {\n      this.labelList.push({\n        label: this.labelListInput,\n        color: 'red'\n      });\n      this.labelListInput = '';\n    }\n  }\n  onLabelSelect(label) {\n    this.onLabelSelected.emit(this.selectedLabel);\n  }\n}\nLabelListComponent.ɵfac = function LabelListComponent_Factory(t) {\n  return new (t || LabelListComponent)();\n};\nLabelListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LabelListComponent,\n  selectors: [[\"app-label-list\"]],\n  inputs: {\n    labelList: \"labelList\"\n  },\n  outputs: {\n    onLabelSelected: \"onLabelSelected\"\n  },\n  decls: 5,\n  vars: 2,\n  consts: [[\"type\", \"text\", \"id\", \"labelList\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"background-color\", \"color\", \"click\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function LabelListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function LabelListComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.labelListInput = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function LabelListComponent_Template_button_click_2_listener() {\n        return ctx.addLabel();\n      });\n      i0.ɵɵtext(3, \"Add Label\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, LabelListComponent_button_4_Template, 2, 5, \"button\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.labelListInput);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.labelList);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2BA,YAAY,QAAgB,eAAe;;;;;;;ICGlEC,iCAAsI;IAA9FA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAAgEA,YAAiB;IAAAA,iBAAS;;;;IAAzFA,kDAAsC;IAAyBA,eAAiB;IAAjBA,oCAAiB;;;ADI3J,OAAM,MAAOC,kBAAkB;EAL/BC;IAMW,cAAS,GAAmC,EAAE;IACvD,mBAAc,GAAG,EAAE;IACT,oBAAe,GAAG,IAAIH,YAAY,EAAgC;;EAE5EI,QAAQ;IACN,IAAI,IAAI,CAACC,cAAc,EAAE;MACvB,IAAI,CAACC,SAAS,CAACC,IAAI,CAAC;QAACC,KAAK,EAAE,IAAI,CAACH,cAAc;QAAEI,KAAK,EAAE;MAAK,CAAC,CAAC;MAC/D,IAAI,CAACJ,cAAc,GAAG,EAAE;;EAE5B;EAEAK,aAAa,CAACF,KAAmC;IAC/C,IAAI,CAACG,eAAe,CAACC,IAAI,CAAC,IAAI,CAACC,aAAa,CAAC;EAC/C;;AAdWX,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAY;EAAAC;IAAAT;EAAA;EAAAU;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MCP/BnB,2BAAK;MACiCA;QAAA;MAAA,EAA4B;MAA9DA,iBAA+D;MAC/DA,iCAA6B;MAArBA;QAAA,OAASoB,cAAU;MAAA,EAAC;MAACpB,yBAAS;MAAAA,iBAAS;MAC/CA,yEAAgK;MACpKA,iBAAM;;;MAHgCA,eAA4B;MAA5BA,4CAA4B;MAEpCA,eAAY;MAAZA,uCAAY","names":["EventEmitter","i0","LabelListComponent","constructor","addLabel","labelListInput","labelList","push","label","color","onLabelSelect","onLabelSelected","emit","selectedLabel","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\label-list\\label-list.component.ts","C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\label-list\\label-list.component.html"],"sourcesContent":["import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'app-label-list',\n  templateUrl: './label-list.component.html',\n  styleUrls: ['./label-list.component.css']\n})\nexport class LabelListComponent {\n  @Input() labelList: {label:string, color:string}[] = [];\n  labelListInput = '';\n  @Output() onLabelSelected = new EventEmitter<{label:string, color:string}>();\n  \n  addLabel() {\n    if (this.labelListInput) {\n      this.labelList.push({label: this.labelListInput, color: 'red'});\n      this.labelListInput = '';\n    }\n  }\n\n  onLabelSelect(label: {label:string, color:string}) {\n    this.onLabelSelected.emit(this.selectedLabel);\n  }\n}\n","<div>\n    <input type=\"text\" id=\"labelList\" [(ngModel)]=\"labelListInput\">\n    <button (click)=\"addLabel()\">Add Label</button>\n    <button *ngFor=\"let label of labelList\" (click)=\"onLabelSelect(label)\" [style.background-color]=\"label.color\" [style.color]=\"'white'\">{{ label.label }}</button>\n</div>  "]},"metadata":{},"sourceType":"module","externalDependencies":[]}