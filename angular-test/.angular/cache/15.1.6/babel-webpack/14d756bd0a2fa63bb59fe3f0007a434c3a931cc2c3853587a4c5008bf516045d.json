{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./api-service.service\";\nexport class AppComponent {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.labelList = [{\n      label: 'SKILLS',\n      color: 'red'\n    }, {\n      label: 'EXPERIENCE',\n      color: 'blue'\n    }, {\n      label: 'DIPLOMA',\n      color: 'green'\n    }, {\n      label: 'DIPLOMA_MAJOR',\n      color: 'purple'\n    }];\n    this.selectedLabel = null;\n    this.words = [];\n  }\n  onFileUploaded(content) {\n    this.documentContent = content;\n    let listofwords = this.documentContent.split(' ');\n    for (let i = 0; i < listofwords.length; i++) {\n      this.words.push({\n        word: listofwords[i],\n        label: null\n      });\n    }\n  }\n  onWordLabeled(word) {\n    if (this.selectedLabel) {\n      word.label = this.selectedLabel;\n    }\n  }\n  getLabel(label) {\n    this.selectedLabel = label;\n  }\n  annotate() {\n    this.apiService.annotateDocument(this.words, this.documentContent).subscribe({\n      next: response => {\n        this.response = response;\n        // create a new file\n        const file = new File([this.response.document], 'annotated_document.json', {\n          type: 'application/json'\n        });\n        // create a URL for the file\n        const fileUrl = URL.createObjectURL(file);\n        // create a link to download the file\n        const downloadLink = document.createElement('a');\n        downloadLink.href = fileUrl;\n        downloadLink.download = 'annotated_document.json';\n        // trigger the download\n        downloadLink.click();\n      },\n      error: () => console.log('error'),\n      complete: () => {\n        console.log('complete');\n      }\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ApiServiceService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 2,\n  consts: [[3, \"labelList\", \"onLabelSelected\"], [3, \"fileUploaded\"], [3, \"words\", \"WordClicked\"], [3, \"click\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-label-list\", 0);\n      i0.ɵɵlistener(\"onLabelSelected\", function AppComponent_Template_app_label_list_onLabelSelected_0_listener($event) {\n        return ctx.getLabel($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(1, \"app-document-upload\", 1);\n      i0.ɵɵlistener(\"fileUploaded\", function AppComponent_Template_app_document_upload_fileUploaded_1_listener($event) {\n        return ctx.onFileUploaded($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"app-document-viewer\", 2);\n      i0.ɵɵlistener(\"WordClicked\", function AppComponent_Template_app_document_viewer_WordClicked_2_listener($event) {\n        return ctx.onWordLabeled($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n        return ctx.annotate();\n      });\n      i0.ɵɵtext(4, \"get annotation\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"labelList\", ctx.labelList);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"words\", ctx.words);\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAaA,OAAM,MAAOA,YAAY;EACvBC,YAAoBC,UAA6B;IAA7B,eAAU,GAAVA,UAAU;IAG9B,cAAS,GAAY,CAAC;MAACC,KAAK,EAAC,QAAQ;MAAEC,KAAK,EAAE;IAAK,CAAC,EACpD;MAACD,KAAK,EAAC,YAAY;MAAEC,KAAK,EAAE;IAAM,CAAC,EACnC;MAACD,KAAK,EAAC,SAAS;MAAEC,KAAK,EAAE;IAAO,CAAC,EACjC;MAACD,KAAK,EAAC,eAAe;MAAEC,KAAK,EAAE;IAAQ,CAAC,CAAE;IAC1C,kBAAa,GAAiB,IAAI;IAClC,UAAK,GAAwC,EAAE;EARK;EAapDC,cAAc,CAACC,OAAe;IAC5B,IAAI,CAACC,eAAe,GAAGD,OAAO;IAC9B,IAAIE,WAAW,GAAG,IAAI,CAACD,eAAe,CAACE,KAAK,CAAC,GAAG,CAAC;IACjD,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACF,WAAW,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;MACrC,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC;QAACC,IAAI,EAACN,WAAW,CAACE,CAAC,CAAC;QAAEP,KAAK,EAAE;MAAI,CAAC,CAAC;;EAEvD;EAEAY,aAAa,CAACD,IAAuC;IACnD,IAAI,IAAI,CAACE,aAAa,EAAE;MACtBF,IAAI,CAACX,KAAK,GAAG,IAAI,CAACa,aAAa;;EAEnC;EAEAC,QAAQ,CAACd,KAAY;IACnB,IAAI,CAACa,aAAa,GAAGb,KAAK;EAC5B;EAEAe,QAAQ;IACN,IAAI,CAAChB,UAAU,CAACiB,gBAAgB,CAAC,IAAI,CAACP,KAAK,EAAE,IAAI,CAACL,eAAe,CAAC,CAC/Da,SAAS,CAAC;MACTC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;QACxB;QACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAAC,IAAI,CAACF,QAAQ,CAACG,QAAQ,CAAC,EAAE,yBAAyB,EAAE;UAAEC,IAAI,EAAE;QAAkB,CAAE,CAAC;QACxG;QACA,MAAMC,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACN,IAAI,CAAC;QACzC;QACA,MAAMO,YAAY,GAAGL,QAAQ,CAACM,aAAa,CAAC,GAAG,CAAC;QAChDD,YAAY,CAACE,IAAI,GAAGL,OAAO;QAC3BG,YAAY,CAACG,QAAQ,GAAG,yBAAyB;QACjD;QACAH,YAAY,CAACI,KAAK,EAAE;MACtB,CAAC;MACDC,KAAK,EAAE,MAAMC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACjCC,QAAQ,EAAE,MAAK;QACbF,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACzB;KACD,CAAC;EACN;;AArDWrC,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAuC;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbzBC,yCAA6E;MAArCA;QAAA,OAAmBC,oBAAgB;MAAA,EAAC;MAACD,iBAAiB;MAC9FA,8CAA6D;MAAxCA;QAAA,OAAgBC,0BAAsB;MAAA,EAAC;MAACD,iBAAsB;MACnFA,8CAA2E;MAAtCA;QAAA,OAAeC,yBAAqB;MAAA,EAAC;MAACD,iBAAsB;MACjGA,iCAA6B;MAArBA;QAAA,OAASC,cAAU;MAAA,EAAC;MAACD,8BAAc;MAAAA,iBAAS;;;MAHpCA,yCAAuB;MAElBA,eAAe;MAAfA,iCAAe","names":["AppComponent","constructor","apiService","label","color","onFileUploaded","content","documentContent","listofwords","split","i","length","words","push","word","onWordLabeled","selectedLabel","getLabel","annotate","annotateDocument","subscribe","next","response","file","File","document","type","fileUrl","URL","createObjectURL","downloadLink","createElement","href","download","click","error","console","log","complete","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\app.component.ts","C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\app.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { ApiServiceService } from './api-service.service';\n\nexport type Label = {\n  label: string,\n  color: string\n};\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private apiService: ApiServiceService) {}\n\n\n  labelList: Label[] = [{label:'SKILLS', color: 'red'},\n  {label:'EXPERIENCE', color: 'blue'},\n  {label:'DIPLOMA', color: 'green'},\n  {label:'DIPLOMA_MAJOR', color: 'purple'},]\n  selectedLabel: Label | null = null;\n  words: {word:string, label:Label | null}[] = [];\n  \n  documentContent!: string;\n  response : any;\n\n  onFileUploaded(content: string) {\n    this.documentContent = content;\n    let listofwords = this.documentContent.split(' ');\n    for(let i=0; i<listofwords.length; i++){\n      this.words.push({word:listofwords[i], label: null})\n  }\n  }\n\n  onWordLabeled(word: {word:string, label:Label | null}) {\n    if (this.selectedLabel) {\n      word.label = this.selectedLabel;\n    }\n  }\n\n  getLabel(label: Label) {\n    this.selectedLabel = label;\n  }\n\n  annotate() {\n    this.apiService.annotateDocument(this.words, this.documentContent)\n      .subscribe({\n        next: (response) => {\n          this.response = response;\n          // create a new file\n          const file = new File([this.response.document], 'annotated_document.json', { type: 'application/json' });\n          // create a URL for the file\n          const fileUrl = URL.createObjectURL(file);\n          // create a link to download the file\n          const downloadLink = document.createElement('a');\n          downloadLink.href = fileUrl;\n          downloadLink.download = 'annotated_document.json';\n          // trigger the download\n          downloadLink.click();\n        },\n        error: () => console.log('error'),\n        complete: () => {\n          console.log('complete');\n        }\n      });\n  }\n  \n}\n","<app-label-list [labelList]=\"labelList\" (onLabelSelected)=\"getLabel($event)\"></app-label-list>\n<app-document-upload (fileUploaded)=\"onFileUploaded($event)\"></app-document-upload>\n<app-document-viewer [words]=\"words\" (WordClicked)=\"onWordLabeled($event)\"></app-document-viewer>\n<button (click)=\"annotate()\">get annotation</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}