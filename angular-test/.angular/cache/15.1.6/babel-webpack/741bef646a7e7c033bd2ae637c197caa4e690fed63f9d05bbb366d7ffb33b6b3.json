{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction LabelListComponent_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function LabelListComponent_button_4_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const label_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onLabelSelect(label_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const label_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"background-color\", ctx_r0.labelColorMap[label_r1])(\"color\", \"white\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(label_r1);\n  }\n}\nexport class LabelListComponent {\n  constructor() {\n    this.labelList = [];\n    this.labelListInput = '';\n    this.selectedLabel = null;\n  }\n  addLabel() {\n    if (this.labelListInput && !this.labelList.includes(this.labelListInput)) {\n      this.labelList.push(this.labelListInput);\n      this.labelListInput = '';\n    }\n  }\n  onLabelSelect(label) {\n    this.selectedLabel = label;\n    console.log(`Selected label: ${this.selectedLabel}`);\n  }\n}\nLabelListComponent.ɵfac = function LabelListComponent_Factory(t) {\n  return new (t || LabelListComponent)();\n};\nLabelListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LabelListComponent,\n  selectors: [[\"app-label-list\"]],\n  inputs: {\n    labelList: \"labelList\"\n  },\n  decls: 5,\n  vars: 2,\n  consts: [[\"type\", \"text\", \"id\", \"labelList\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [3, \"background-color\", \"color\", \"click\", 4, \"ngFor\", \"ngForOf\"]],\n  template: function LabelListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function LabelListComponent_Template_input_ngModelChange_1_listener($event) {\n        return ctx.labelListInput = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function LabelListComponent_Template_button_click_2_listener() {\n        return ctx.addLabel();\n      });\n      i0.ɵɵtext(3, \"Add Label\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, LabelListComponent_button_4_Template, 2, 5, \"button\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.labelListInput);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.labelList);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAGIA,iCAA+I;IAAvGA;MAAA;MAAA;MAAA;MAAA,OAASA,6CAAoB;IAAA,EAAC;IAAyEA,YAAW;IAAAA,iBAAS;;;;;IAA5FA,kEAA+C;IAAyBA,eAAW;IAAXA,8BAAW;;;ACI9J,OAAM,MAAOC,kBAAkB;EAL/BC;IAMW,cAAS,GAAa,EAAE;IACjC,mBAAc,GAAG,EAAE;IACnB,kBAAa,GAAkB,IAAI;;EAEnCC,QAAQ;IACN,IAAI,IAAI,CAACC,cAAc,IAAI,CAAC,IAAI,CAACC,SAAS,CAACC,QAAQ,CAAC,IAAI,CAACF,cAAc,CAAC,EAAE;MACxE,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,IAAI,CAACH,cAAc,CAAC;MACxC,IAAI,CAACA,cAAc,GAAG,EAAE;;EAE5B;EAEAI,aAAa,CAACC,KAAa;IACzB,IAAI,CAACC,aAAa,GAAGD,KAAK;IAC1BE,OAAO,CAACC,GAAG,CAAC,mBAAmB,IAAI,CAACF,aAAa,EAAE,CAAC;EACtD;;AAfWT,kBAAkB;mBAAlBA,kBAAkB;AAAA;AAAlBA,kBAAkB;QAAlBA,kBAAkB;EAAAY;EAAAC;IAAAT;EAAA;EAAAU;EAAAC;EAAAC;EAAAC;IAAA;MDP/BlB,2BAAK;MACiCA;QAAA;MAAA,EAA4B;MAA9DA,iBAA+D;MAC/DA,iCAA6B;MAArBA;QAAA,OAASmB,cAAU;MAAA,EAAC;MAACnB,yBAAS;MAAAA,iBAAS;MAC/CA,yEAAmK;MACvKA,iBAAM;;;MAHgCA,eAA4B;MAA5BA,4CAA4B;MAEpCA,eAAY;MAAZA,uCAAY","names":["i0","LabelListComponent","constructor","addLabel","labelListInput","labelList","includes","push","onLabelSelect","label","selectedLabel","console","log","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\label-list\\label-list.component.html","C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\label-list\\label-list.component.ts"],"sourcesContent":["<div>\n    <input type=\"text\" id=\"labelList\" [(ngModel)]=\"labelListInput\">\n    <button (click)=\"addLabel()\">Add Label</button>\n    <button *ngFor=\"let label of labelList\" (click)=\"onLabelSelect(label)\" [style.background-color]=\"labelColorMap[label]\" [style.color]=\"'white'\">{{ label }}</button>\n</div>  ","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-label-list',\n  templateUrl: './label-list.component.html',\n  styleUrls: ['./label-list.component.css']\n})\nexport class LabelListComponent {\n  @Input() labelList: string[] = [];\n  labelListInput = '';\n  selectedLabel: string | null = null;\n  \n  addLabel() {\n    if (this.labelListInput && !this.labelList.includes(this.labelListInput)) {\n      this.labelList.push(this.labelListInput);\n      this.labelListInput = '';\n    }\n  }\n\n  onLabelSelect(label: string) {\n    this.selectedLabel = label;\n    console.log(`Selected label: ${this.selectedLabel}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}