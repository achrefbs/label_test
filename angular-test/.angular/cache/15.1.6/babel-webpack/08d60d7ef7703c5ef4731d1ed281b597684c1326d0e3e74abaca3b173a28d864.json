{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class DocumentViewerComponent {\n  // annotateDocument() {\n  //   console.log('Document annotated');\n  //   console.log(this.documentContent)\n  // }\n  onTextSelected(event) {\n    const selection = window.getSelection();\n    if (selection && !selection.isCollapsed && this.selectedLabel) {\n      const range = selection.getRangeAt(0);\n      const start = range.startOffset;\n      const end = range.endOffset;\n      const text = selection.toString();\n      const annotation = {\n        start,\n        end,\n        label: this.selectedLabel,\n        text\n      };\n      this.annotations.push(annotation);\n    }\n  }\n  exportAnnotations() {\n    const data = {\n      document: this.documentContent,\n      annotation: this.annotations\n    };\n    const json = JSON.stringify(data);\n    const blob = new Blob([json], {\n      type: 'application/json'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'annotations.json';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n}\nDocumentViewerComponent.ɵfac = function DocumentViewerComponent_Factory(t) {\n  return new (t || DocumentViewerComponent)();\n};\nDocumentViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DocumentViewerComponent,\n  selectors: [[\"app-document-viewer\"]],\n  inputs: {\n    documentContent: \"documentContent\"\n  },\n  decls: 5,\n  vars: 1,\n  consts: [[3, \"mouseup\"], [\"documentContainer\", \"\"], [3, \"click\"]],\n  template: function DocumentViewerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵlistener(\"mouseup\", function DocumentViewerComponent_Template_div_mouseup_0_listener($event) {\n        return ctx.onTextSelected($event);\n      });\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function DocumentViewerComponent_Template_button_click_3_listener() {\n        return ctx.exportAnnotations();\n      });\n      i0.ɵɵtext(4, \"Export Annotations\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\" \", ctx.documentContent, \" \");\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AAOA,OAAM,MAAOA,uBAAuB;EAMlC;EACA;EACA;EACA;EACAC,cAAc,CAACC,KAAU;IACvB,MAAMC,SAAS,GAAGC,MAAM,CAACC,YAAY,EAAE;IACvC,IAAIF,SAAS,IAAI,CAACA,SAAS,CAACG,WAAW,IAAI,IAAI,CAACC,aAAa,EAAE;MAC7D,MAAMC,KAAK,GAAGL,SAAS,CAACM,UAAU,CAAC,CAAC,CAAC;MACrC,MAAMC,KAAK,GAAGF,KAAK,CAACG,WAAW;MAC/B,MAAMC,GAAG,GAAGJ,KAAK,CAACK,SAAS;MAC3B,MAAMC,IAAI,GAAGX,SAAS,CAACY,QAAQ,EAAE;MACjC,MAAMC,UAAU,GAAG;QAAEN,KAAK;QAAEE,GAAG;QAAEK,KAAK,EAAE,IAAI,CAACV,aAAa;QAAEO;MAAI,CAAE;MAClE,IAAI,CAACI,WAAW,CAACC,IAAI,CAACH,UAAU,CAAC;;EAErC;EACAI,iBAAiB;IACf,MAAMC,IAAI,GAAG;MAAEC,QAAQ,EAAE,IAAI,CAACC,eAAe;MAAEP,UAAU,EAAE,IAAI,CAACE;IAAW,CAAE;IAC7E,MAAMM,IAAI,GAAGC,IAAI,CAACC,SAAS,CAACL,IAAI,CAAC;IACjC,MAAMM,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACJ,IAAI,CAAC,EAAE;MAAEK,IAAI,EAAE;IAAkB,CAAE,CAAC;IAC3D,MAAMC,GAAG,GAAG1B,MAAM,CAAC2B,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IAC5C,MAAMM,CAAC,GAAGX,QAAQ,CAACY,aAAa,CAAC,GAAG,CAAC;IACrCD,CAAC,CAACE,IAAI,GAAGL,GAAG;IACZG,CAAC,CAACG,QAAQ,GAAG,kBAAkB;IAC/BH,CAAC,CAACI,KAAK,EAAE;IACTjC,MAAM,CAAC2B,GAAG,CAACO,eAAe,CAACR,GAAG,CAAC;EACjC;;AA/BW9B,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAuC;EAAAC;IAAAjB;EAAA;EAAAkB;EAAAC;EAAAC;EAAAC;IAAA;MCPpCC,iCAA2D;MAAnCA;QAAA,OAAWC,0BAAsB;MAAA,EAAC;MACtDD,YACF;MAAAA,iBAAM;MAENA,iCAAsC;MAA9BA;QAAA,OAASC,uBAAmB;MAAA,EAAC;MAACD,kCAAkB;MAAAA,iBAAS;;;MAH/DA,eACF;MADEA,oDACF","names":["DocumentViewerComponent","onTextSelected","event","selection","window","getSelection","isCollapsed","selectedLabel","range","getRangeAt","start","startOffset","end","endOffset","text","toString","annotation","label","annotations","push","exportAnnotations","data","document","documentContent","json","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","selectors","inputs","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.ts","C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-document-viewer',\n  templateUrl: './document-viewer.component.html',\n  styleUrls: ['./document-viewer.component.css']\n})\nexport class DocumentViewerComponent {\n  @Input()\n  documentContent!: string;\n  selectedLabel!: boolean | null;\n  annotations: any;\n\n  // annotateDocument() {\n  //   console.log('Document annotated');\n  //   console.log(this.documentContent)\n  // }\n  onTextSelected(event: any) {\n    const selection = window.getSelection();\n    if (selection && !selection.isCollapsed && this.selectedLabel) {\n      const range = selection.getRangeAt(0);\n      const start = range.startOffset;\n      const end = range.endOffset;\n      const text = selection.toString();\n      const annotation = { start, end, label: this.selectedLabel, text };\n      this.annotations.push(annotation);\n    }\n  }\n  exportAnnotations() {\n    const data = { document: this.documentContent, annotation: this.annotations };\n    const json = JSON.stringify(data);\n    const blob = new Blob([json], { type: 'application/json' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'annotations.json';\n    a.click();\n    window.URL.revokeObjectURL(url);\n  }\n  \n}\n","<div #documentContainer (mouseup)=\"onTextSelected($event)\">\n    {{ documentContent }}\n  </div>\n\n  <button (click)=\"exportAnnotations()\">Export Annotations</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}