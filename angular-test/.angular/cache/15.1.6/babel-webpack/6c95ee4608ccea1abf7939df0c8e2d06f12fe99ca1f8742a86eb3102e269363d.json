{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction DocumentViewerComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function DocumentViewerComponent_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const word_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onWordClicked(word_r1));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const word_r1 = ctx.$implicit;\n    i0.ɵɵstyleProp(\"background-color\", word_r1.label == null ? null : word_r1.label.color);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(word_r1.word);\n  }\n}\nexport class DocumentViewerComponent {\n  constructor() {\n    this.words = [];\n    this.WordClicked = new EventEmitter();\n  }\n  onWordClicked(word) {\n    console.log('wordClicked', word);\n    this.WordClicked.emit(word);\n  }\n}\nDocumentViewerComponent.ɵfac = function DocumentViewerComponent_Factory(t) {\n  return new (t || DocumentViewerComponent)();\n};\nDocumentViewerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DocumentViewerComponent,\n  selectors: [[\"app-document-viewer\"]],\n  inputs: {\n    words: \"words\"\n  },\n  outputs: {\n    WordClicked: \"WordClicked\"\n  },\n  decls: 4,\n  vars: 1,\n  consts: [[3, \"background-color\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function DocumentViewerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\");\n      i0.ɵɵtemplate(1, DocumentViewerComponent_button_1_Template, 2, 3, \"button\", 0);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function DocumentViewerComponent_Template_button_click_2_listener() {\n        return ctx.annotate();\n      });\n      i0.ɵɵtext(3, \"ert\");\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.words);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2BA,YAAY,QAAgB,eAAe;;;;;;ICCpEC,iCAC6E;IAA9BA;MAAA;MAAA;MAAA;MAAA,OAASA,4CAAmB;IAAA,EAAC;IAACA,YAAe;IAAAA,iBAAS;;;;IAAnGA,sFAA4C;IAA+BA,eAAe;IAAfA,kCAAe;;;ADK9F,OAAM,MAAOC,uBAAuB;EALpCC;IAMW,UAAK,GAAwC,EAAE;IAC9C,gBAAW,GAAG,IAAIH,YAAY,EAAqC;;EAE7EI,aAAa,CAACC,IAAuC;IACnDC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEF,IAAI,CAAC;IAChC,IAAI,CAACG,WAAW,CAACC,IAAI,CAACJ,IAAI,CAAC;EAC7B;;AAPWH,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAQ;EAAAC;IAAAC;EAAA;EAAAC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MCPpChB,2BAAK;MACHA,8EACqG;MACvGA,iBAAM;MACNA,iCAA6B;MAArBA;QAAA,OAASiB,cAAU;MAAA,EAAC;MAACjB,mBAAG;MAAAA,iBAAS;;;MAHdA,eAAS;MAATA,mCAAS","names":["EventEmitter","i0","DocumentViewerComponent","constructor","onWordClicked","word","console","log","WordClicked","emit","selectors","inputs","words","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.ts","C:\\Users\\achre\\OneDrive\\Desktop\\test\\angular-test\\src\\app\\document-viewer\\document-viewer.component.html"],"sourcesContent":["import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport {Label} from '../app.component'\n@Component({\n  selector: 'app-document-viewer',\n  templateUrl: './document-viewer.component.html',\n  styleUrls: ['./document-viewer.component.css']\n})\nexport class DocumentViewerComponent {\n  @Input() words: {word:string, label:Label | null}[] = [];\n  @Output() WordClicked = new EventEmitter<{word:string, label:Label | null}>();\n  \n  onWordClicked(word: {word:string, label:Label | null}) {\n    console.log('wordClicked', word);\n    this.WordClicked.emit(word);\n  }\n}\n","<div>\n  <button *ngFor=\"let word of words;\"\n    [style.background-color]=\"word.label?.color\" (click)=\"onWordClicked(word)\">{{ word.word }}</button>\n</div>\n<button (click)=\"annotate()\">ert</button>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}